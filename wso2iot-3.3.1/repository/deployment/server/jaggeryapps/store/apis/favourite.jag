<%
include('/jagg/jagg.jag');
var favourites = jagg.module("favourites");
var auditLog = require('/modules/auditLog/logger.js');


require('/modules/store.js').exec(function (ctx) {
    var log = new Log();
    var matcher = new URIMatcher(request.getRequestURI());
    var user = user = ctx.user;
    var requestMethod = request.getMethod();
    var HTTP_POST = "POST";

    if (!user) {
        response.status = 401;
        response.contentType = "application/json";
        response.content = {"message": "Login required"};
        return;
    }

    var setFavouritePage = function () {
        var parameters = request.getAllParameters();
        var storeTenantDomain = parameters.storeTenantDomain;
        var userName = user.username;
        var tenantIdOfUser = user.tenantId;

        var content = favourites.setFavouritePage(userName, tenantIdOfUser, storeTenantDomain);
        return content
    };

    var removeFavouritePage = function () {
        var parameters = request.getAllParameters();
        var storeTenantDomain = parameters.storeTenantDomain;
        var userName = user.username;
        var tenantIdOfUser = user.tenantId;

        var content = favourites.removeFavouritePage(userName, tenantIdOfUser, storeTenantDomain);
        return content;
    };

    var addToFavouriteApps = function () {
        var parameters = request.getAllParameters();
        var name = parameters.name;
        var version = parameters.version;
        var provider = parameters.provider;
        var storeTenantDomain = parameters.storeTenantDomain;
        var userName = user.username;
        var tenantIdOfUser = user.tenantId;

        var content = favourites.addToFavouriteApps(provider, name, version, userName, tenantIdOfUser,
                                                    storeTenantDomain);
        auditLog.writeLog(tenantIdOfUser, userName, "AddedToFavourite", "Webapp", "{" +
                                                                                  "providerName='" + provider + '\'' +
                                                                                  ", apiName='" + name + '\'' +
                                                                                  ", version='" + version + '\'' +
                                                                                  '}', "", "");
        return content;
    };

    var removeFromFavourite = function () {
        var parameters = request.getAllParameters();
        var name = parameters.name;
        var version = parameters.version;
        var provider = parameters.provider;
        var storeTenantDomain = parameters.storeTenantDomain;
        var userName = user.username;
        var tenantIdOfUser = user.tenantId;

        var content = favourites.removeFromFavouriteApps(provider, name, version, userName, tenantIdOfUser,
                                                         storeTenantDomain);
        auditLog.writeLog(tenantIdOfUser, userName, "RemoveFromFavourite", "Webapp", "{" +
                                                                                     "providerName='" + provider + '\''
                                                                                     +
                                                                                     ", apiName='" + name + '\'' +
                                                                                     ", version='" + version + '\'' +
                                                                                     '}', "", "");
        return content
    };

    var hasFavouritePage = function () {
        var parameters = request.getAllParameters();
        var storeTenantDomain = parameters.storeTenantDomain;
        var userName = user.username;
        var tenantIdOfUser = user.tenantId;
        var content = favourites.hasFavouritePage(userName, tenantIdOfUser, storeTenantDomain);
        return content;
    };

    if (requestMethod == HTTP_POST && matcher.match('/{context}/apis/favourite/{action}')) {
        var action = matcher.elements().action;
        response.status = 200;
        response.contentType = "application/json";
        var userName = user.username;
        var tenantIdOfUser = user.tenantId;

        switch (action) {
            case "set-favourite-page":
                response.content = setFavouritePage();
                auditLog.writeLog(tenantIdOfUser, userName, "SetTheFavoritePage", "", "", "", "");
                return;
            case "remove-favourite-page":
                response.content = removeFavouritePage();
                auditLog.writeLog(tenantIdOfUser, userName, "RemovedTheFavoritePage", "", "", "", "");
                return;
            case "add-favourite-app":
                response.content = addToFavouriteApps();
                return;
            case "remove-favourite-app":
                response.content = removeFromFavourite();
                return;
            case "has-favourite-page":
                response.content = hasFavouritePage();
                return;
        }
    }
    //if no cases matched
    response.status = 404;
    response.contentType = "application/json";
    response.content = {"message": "API endpoint not found"};
}, request, response, session);

%>