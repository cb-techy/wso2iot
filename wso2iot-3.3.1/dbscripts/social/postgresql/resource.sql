CREATE SEQUENCE SOCIAL_COMMENTS_SEQUENCE START WITH 1 INCREMENT BY 1 ;

CREATE TABLE IF NOT EXISTS SOCIAL_COMMENTS (
id BIGINT NOT NULL DEFAULT nextval('social_comments_sequence'),
body BYTEA,
payload_context_id VARCHAR(250),
user_id VARCHAR(100),
tenant_domain VARCHAR(100),
likes SMALLINT,
unlikes SMALLINT,
timestamp VARCHAR(100),
PRIMARY KEY (id));

CREATE SEQUENCE SOCIAL_RATING_SEQUENCE START WITH 1 INCREMENT BY 1 ;

CREATE TABLE IF NOT EXISTS SOCIAL_RATING (
id BIGINT NOT NULL DEFAULT nextval('social_rating_sequence'),
comment_id BIGINT NOT NULL,
payload_context_id VARCHAR(250),
user_id VARCHAR(100),
tenant_domain VARCHAR(100),
rating SMALLINT,
timestamp VARCHAR(100),
PRIMARY KEY (id),
FOREIGN KEY (comment_id) REFERENCES SOCIAL_COMMENTS(id) ON DELETE CASCADE);

CREATE SEQUENCE SOCIAL_RATING_CACHE_SEQUENCE START WITH 1 INCREMENT BY 1 ;
CREATE TABLE IF NOT EXISTS SOCIAL_RATING_CACHE (
payload_context_id VARCHAR(250),
rating_total INT,
rating_count INT,
rating_average double precision,
tenant_domain VARCHAR(100),
PRIMARY KEY (payload_context_id));

CREATE SEQUENCE SOCIAL_LIKES_SEQUENCE START WITH 1 INCREMENT BY 1 ;

CREATE TABLE IF NOT EXISTS SOCIAL_LIKES (
id BIGINT NOT NULL DEFAULT nextval('social_likes_sequence'),
payload_context_id BIGINT NOT NULL,
user_id VARCHAR(100),
tenant_domain VARCHAR(100),
like_value SMALLINT,
timestamp VARCHAR(100),
PRIMARY KEY (id),
FOREIGN KEY (payload_context_id) REFERENCES SOCIAL_COMMENTS(id) ON DELETE CASCADE);